var model = require('../../models/model')
var utils = require('../../utils/utils')
var fs = require('fs')

module.exports = {

  // Constructor function
  getInstance: function(serverFromJSON) {

    var server = new model.Server(serverFromJSON.name, serverFromJSON.distro);

    // Copy all properties of the JSON object to new server object (of class Server)
    for(var k in serverFromJSON) server[k]=serverFromJSON[k];

    // Implement here the Server object methods
    server.getSetupScript = function () {
      return getSetupScript(server);
    }

    return server
  } 

}

var getSetupScript = function(server) {

  var setupScript = new model.Script();

  var remoteConnectionCommand = server.platform.host.protocol + " " + server.platform.host.user +"@" + server.platform.host.url + " "
  var volumeDirectory = server.platform.host.artifacts_directory + server.distro + "/" + server.name
  
  setupScript.type = "#!/bin/bash"
  setupScript.comments = "# Autogenerated script to setup 'docker' type of servers"
  setupScript.value = remoteConnectionCommand + "docker login --username=mekomsolutions --password=$dockerHub_password \n"
  setupScript.value = setupScript.value + remoteConnectionCommand + "docker run -it -p " + server.platform.ports.http + "-p " + server.platform.ports.https
  setupScript.value = setupScript.value + " --name " + server.distro + server.name + " -h bahmni -d "
  setupScript.value = setupScript.value + " -v " + volumeDirectory + "/modules:/mnt/modules "
  setupScript.value = setupScript.value + " -v " + volumeDirectory + "/war:/mnt/war "
  setupScript.value = setupScript.value + " -v " + volumeDirectory + "/bahmniapps:/mnt/bahmniapps "
  setupScript.value = setupScript.value + " -v " + volumeDirectory + "/bahmni_config:/mnt/bahmni_config "
  setupScript.value = setupScript.value + " -v " + volumeDirectory + "/openmrs_config:/mnt/openmrs_config "
  setupScript.value = setupScript.value + " -v " + volumeDirectory + "logs/:/mnt/logs "
  setupScript.value = setupScript.value + " " + server.platform.image

  return setupScript    
}
